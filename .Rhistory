locus <- numeric(0)
for (i in seq(1, length(loci))) {
if (length(loci[[i]]) > 0) { for (j in seq(1, length(loci[[i]]))) {
if (length(loci[[i]][[j]]) > 0) { for (k in seq(1, length(loci[[i]][[j]]))) {
time[length(time) + 1] <- j
class[length(class) + 1] <- palette[i]
effect[length(effect) + 1] <- size[[i]][[j]][k]
locus[length(locus) + 1] <- loci[[i]][[j]][k]
} }
} }
}
df <- data.frame(time, class, effect, locus)
df <- df[order(df$locus, df$time), ]
odd <- c(1)
even <- c(1)
for (k in seq(2, NROW(df))) {
if (k%%2 == 0) {
odd[k] <- odd[k - 1] + 1
if (df$class[k] == df$class[k - 1] && df$locus[k] == df$locus[k - 1] && df$time[k] == df$time[k - 1] + 1) {
even[k] <- even[k - 1]
} else {
even[k] <- even[k - 1] + 1
}
} else {
even[k] <- even[k - 1] + 1
if (df$class[k] == df$class[k - 1] && df$locus[k] == df$locus[k - 1] && df$time[k] == df$time[k - 1] + 1) {
odd[k] <- odd[k - 1]
} else {
odd[k] <- odd[k - 1] + 1
}
}
} # ...I'm not proud of this!
df$odd <- odd
df$even <- even + NROW(df)
df <- df[order(df$class), ]
come_on_now <- c(df$class, df$class)
come_on_now <- setNames(come_on_now, c(as.character(df$odd), as.character(df$even)))
df$odd <- factor(df$odd)
df$even <- factor(df$even)
figure <- ggplot(df, aes(x = time, y = effect)) +
theme_classic() +
theme(legend.position = "none") +
geom_line(aes(group = odd, colour = odd)) +
geom_line(aes(group = even, colour = even)) +
scale_color_manual(values = come_on_now) +
geom_point(colour = df$class)
suppressMessages(print(figure))
return(figure)
}
plot_effects(olico) -> olicofigure
olicofigure_formatted <- olicofigure +
ggtitle("A)") +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureA.png", plot = olicofigure_formatted, device = "png",
height = 2, width = 3.5, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c("a", "b", "c", "d")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
resfigure_formatted
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c("-1", "0", "1", "2", "3")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
resfigure_formatted
resfigure_formatted
resfigure_formatted <- resfigure +
ggtitle("B)") +
# scale_y_continuous(breaks = c("-1", "0", "1", "2", "3")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
resfigure_formatted
resfigure
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-1, 0), labels = c("a", "b")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
resfigure_formatted
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-1, 0, 1, 2, 3),
labels = c("-1.0", "0.0", "1.0", "2.0", "3.0")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
resfigure_formatted
knitr::opts_chunk$set(echo = TRUE)
set.seed(1)
resfigure <- residual_kernel(rep(3, 5), "o-u", 5, sample = 5)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-1, 0, 1, 2, 3),
labels = c("-1.0", "0.0", "1.0", "2.0", "3.0")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 2, width = 3.5, units = "in", dpi = 500)
olicofigure_formatted <- olicofigure +
ggtitle("A)") +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureA.png", plot = olicofigure_formatted, device = "png",
height = 1.8, width = 3.4, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-1, 0, 1, 2, 3),
labels = c("-1.0", "0.0", "1.0", "2.0", "3.0")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.8, width = 3.4, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(0, 2, 4),
labels = c("0.0", "2.0", "4.0")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.8, width = 3.4, units = "in", dpi = 500)
resfigure_formatted
resfigure
resfigure + ggtitle("mitÃ¤ vittua")
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-1, 0, 1, 2, 3, 4),
labels = c("-1.0", "0.0", "1.0", "2.0", "3.0", "4.0")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.8, width = 3.4, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-1, 0, 1, 2, 3, 4),
labels = c("-1.0", "0.0", "1.0", "2.0", "3.0", "4.0")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.8, width = 3.4, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-1, 0, 1, 2, 3, 4),
labels = c("-1.0", "0.0", "1.0", "2.0", "3.0", "4.0")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.8, width = 3.4, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-1, 0, 1, 2, 3, 4),
labels = c("-1.0", "0.0", "1.0", "2.0", "3.0", "4.0")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.8, width = 3.4, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1, 2, 3, 4),
labels = c("-4.0", "-3.0", "-2.0", "-1.0", "0.0", "1.0", "2.0", "3.0", "4.0")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1, 2, 3, 4),
labels = c("-4.0", "-3.0", "-2.0", "-1.0", "0.0", "1.0", "2.0", "3.0", "4.0")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.8, width = 3.4, units = "in", dpi = 500)
## References
olicofigure_formatted <- olicofigure +
ggtitle("A)") +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureA.png", plot = olicofigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1, 2, 3, 4),
labels = c("-4.0", "-3.0", "-2.0", "-1.0", "0.0", "1.0", "2.0", "3.0", "4.0")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1, 2, 3, 4),
labels = c("-4.0", "-3.0", "-2.0", "-1.0", "0.0", "1.0", "2.0", "3.0", "4.0")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1, 2, 3, 4),
labels = c("-4.0", "-3.0", "-2.0", "-1.0", "0.0", "1.0", "2.0", "3.0", "4.0")) +
theme(title = element_text(size = 11),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
olicofigure_formatted <- olicofigure +
ggtitle("A)") +
theme(title = element_text(size = 8),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureA.png", plot = olicofigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1, 2, 3, 4),
labels = c("-4.0", "-3.0", "-2.0", "-1.0", "0.0", "1.0", "2.0", "3.0", "4.0")) +
theme(title = element_text(size = 8),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
#' Plot effects
#'
#' Visualizes the effects of QTL:s from various effectiveness classes over time.
#'
#' @param effects A list of three matrices, the result created by the function `create_effects()`.
#' @param palette The palette used for plotting. Default is the inclusive Okabe-Ito palette without black.
#' @return Returns the ggplot.
#'
#' @seealso \code{\link[create_effects()]{create_effects}}
#'
#' @export
plot_effects <- function(effects, palette = palette.colors()[2:9]) {
loci <- effects$loci
size <- effects$size
time <- numeric(0)
class <- character(0)
effect <- numeric(0)
locus <- numeric(0)
for (i in seq(1, length(loci))) {
if (length(loci[[i]]) > 0) { for (j in seq(1, length(loci[[i]]))) {
if (length(loci[[i]][[j]]) > 0) { for (k in seq(1, length(loci[[i]][[j]]))) {
time[length(time) + 1] <- j
class[length(class) + 1] <- palette[i]
effect[length(effect) + 1] <- size[[i]][[j]][k]
locus[length(locus) + 1] <- loci[[i]][[j]][k]
} }
} }
}
df <- data.frame(time, class, effect, locus)
df <- df[order(df$locus, df$time), ]
odd <- c(1)
even <- c(1)
for (k in seq(2, NROW(df))) {
if (k%%2 == 0) {
odd[k] <- odd[k - 1] + 1
if (df$class[k] == df$class[k - 1] && df$locus[k] == df$locus[k - 1] && df$time[k] == df$time[k - 1] + 1) {
even[k] <- even[k - 1]
} else {
even[k] <- even[k - 1] + 1
}
} else {
even[k] <- even[k - 1] + 1
if (df$class[k] == df$class[k - 1] && df$locus[k] == df$locus[k - 1] && df$time[k] == df$time[k - 1] + 1) {
odd[k] <- odd[k - 1]
} else {
odd[k] <- odd[k - 1] + 1
}
}
} # ...I'm not proud of this!
df$odd <- odd
df$even <- even + NROW(df)
df <- df[order(df$class), ]
come_on_now <- c(df$class, df$class)
come_on_now <- setNames(come_on_now, c(as.character(df$odd), as.character(df$even)))
df$odd <- factor(df$odd)
df$even <- factor(df$even)
df$effects <- df$effect
figure <- ggplot(df, aes(x = time, y = effects)) +
theme_classic() +
theme(legend.position = "none") +
geom_line(aes(group = odd, colour = odd)) +
geom_line(aes(group = even, colour = even)) +
scale_color_manual(values = come_on_now) +
geom_point(colour = df$class)
suppressMessages(print(figure))
return(figure)
}
olicofigure <- plot_effects(olico)
olicofigure_formatted <- olicofigure +
ggtitle("A)") +
theme(title = element_text(size = 8),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureA.png", plot = olicofigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
olicofigure_formatted <- olicofigure +
ggtitle("A)") +
theme(title = element_text(size = 8),
plot.title = element_text(hjust = 1, vjust = -10),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureA.png", plot = olicofigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
olicofigure_formatted <- olicofigure +
ggtitle("A)") +
theme(title = element_text(size = 8),
plot.title = element_text(hjust = -1, vjust = -5),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureA.png", plot = olicofigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
olicofigure_formatted <- olicofigure +
ggtitle("A)") +
theme(title = element_text(size = 8),
plot.title = element_text(hjust = 0, vjust = -5),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureA.png", plot = olicofigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
olicofigure_formatted <- olicofigure +
ggtitle("A)") +
theme(title = element_text(size = 8),
plot.title = element_text(hjust = -0.1, vjust = -5),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureA.png", plot = olicofigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
## References
olicofigure_formatted <- olicofigure +
ggtitle("A)") +
theme(title = element_text(size = 8),
plot.title = element_text(hjust = -0.2, vjust = -6),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureA.png", plot = olicofigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
olicofigure_formatted <- olicofigure +
ggtitle("A)") +
theme(title = element_text(size = 8),
plot.title = element_text(hjust = -0.15, vjust = -5.5),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureA.png", plot = olicofigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
olicofigure_formatted <- olicofigure +
ggtitle("A)") +
theme(title = element_text(size = 8),
plot.title = element_text(hjust = -0.15, vjust = -5),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureA.png", plot = olicofigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1, 2, 3, 4),
labels = c("-4.0", "-3.0", "-2.0", "-1.0", "0.0", "1.0", "2.0", "3.0", "4.0")) +
theme(title = element_text(size = 8),
plot.title = element_text(hjust = -0.15, vjust = -5),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1, 2, 3, 4),
labels = c("-4.0", "-3.0", "-2.0", "-1.0", "0.0", "1.0", "2.0", "3.0", "4.0")) +
theme(title = element_text(size = 8),
plot.title = element_text(hjust = -0.15, vjust = -5),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1, 2, 3, 4),
labels = c("-4.0", "-3.0", "-2.0", "-1.0", "0.0", "1.0", "2.0", "3.0", "4.0")) +
theme(title = element_text(size = 8),
plot.title = element_text(hjust = -0.15, vjust = -5),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
resfigure_formatted <- resfigure +
ggtitle("B)") +
scale_y_continuous(breaks = c(-4, -3, -2, -1, 0, 1, 2, 3, 4),
labels = c("-4.0", "-3.0", "-2.0", "-1.0", "0.0", "1.0", "2.0", "3.0", "4.0")) +
theme(title = element_text(size = 8),
plot.title = element_text(hjust = -0.15, vjust = -5),
axis.title = element_text(size = 8),
axis.text = element_text(size = 8))
ggsave(filename = "figureB.png", plot = resfigure_formatted, device = "png",
height = 1.6, width = 3.4, units = "in", dpi = 500)
?stable_covariance
residual_kernel(rep(3, 5), "noise", sample = 5) # Noise.
residual_kernel(rep(3, 5), "squared", 5, sample = 5) # Squared exponential.
resfigure <- residual_kernel(rep(3, 5), "o-u", 5, sample = 5) # Ornstein_Uhlenbeck.
residual_kernel(rep(3, 5), "matern", c(5, 5), sample = 5) # Matern.
residual_kernel(rep(3, 5), "noise", sample = 5) # Noise.
residual_kernel(rep(3, 5), "squared", 5, sample = 5) # Squared exponential.
resfigure <- residual_kernel(rep(3, 5), "o-u", 5, sample = 5) # Ornstein_Uhlenbeck.
residual_kernel(rep(3, 5), "matern", c(5, 5), sample = 5) # Matern.
#residual_kernel(rep(1, 50), "noise", sample = 5) # Noise.
residual_kernel(rep(1, 50), "squared", 5, sample = 5) # Squared exponential.
#residual_kernel(rep(1, 50), "o-u", 5, sample = 5) # Ornstein-Uhlenbeck.
#residual_kernel(rep(1, 50), "matern", c(5, 5), sample = 5) # MatÃ©rn.
?residual_kernel
residual_kernel(rep(1, 50), "noise", sample = 5) # Noise.
#residual_kernel(rep(1, 50), "squared", 5, sample = 5) # Squared exponential.
#residual_kernel(rep(1, 50), "o-u", 5, sample = 5) # Ornstein-Uhlenbeck.
#residual_kernel(rep(1, 50), "matern", c(5, 5), sample = 5) # MatÃ©rn.
#residual_kernel(rep(1, 50), "noise", sample = 5) # Noise.
residual_kernel(rep(1, 50), "squared", 10, sample = 5) # Squared exponential.
#residual_kernel(rep(1, 50), "o-u", 5, sample = 5) # Ornstein-Uhlenbeck.
#residual_kernel(rep(1, 50), "matern", c(5, 5), sample = 5) # MatÃ©rn.
#residual_kernel(rep(1, 50), "noise", sample = 5) # Noise.
#residual_kernel(rep(1, 50), "squared", 10, sample = 5) # Squared exponential.
residual_kernel(rep(1, 50), "o-u", 10, sample = 5) # Ornstein-Uhlenbeck.
#residual_kernel(rep(1, 50), "matern", c(5, 5), sample = 5) # MatÃ©rn.
#residual_kernel(rep(1, 50), "noise", sample = 5) # Noise.
#residual_kernel(rep(1, 50), "squared", 10, sample = 5) # Squared exponential.
#residual_kernel(rep(1, 50), "o-u", 10, sample = 5) # Ornstein-Uhlenbeck.
residual_kernel(rep(1, 50), "matern", c(10, 10), sample = 5) # MatÃ©rn.
?pheno
?ULPS
setwd("C:/Users/kleppala20/PLINK")
table <- read.table("goats.raw", sep = " ", header = TRUE)
rownames(table) <- table[, 2]
popnames <- table[, 1]
table[, 1:6] <- NULL
for (i in 1:NCOL(table)){
table[is.na(table[, i]), i] <- mean(table[, i], na.rm = TRUE) # Mean imputing NA:s.
}
save(table, file = "count_table.RData") # Unscaled version.
setwd("C:/Users/kleppala20/Desktop/ULPSholder/ULPS")
str(result)
NROW(G)
load("G.RData")
dim(G)
load(table)
data(table)
amounts <- rbind(rep(1000, 5)) # A thousand random causal variants at each time point.
variances <- rbind(rep(1, 5)) # At each time point, the variance explained by the polygenic signal is 1.
changes <- rbind(rep(1000, 4)) # Between time points, all causal variants are re-randomized.
shuffles <- rbind(rep(TRUE, 4)) # This does nothing for now since no variants are kept between time points.
poly <- create_effects(table, amounts, variances, changes, shuffles) # Calling the function.
check_explained_variance(table, poly, 1, 1) # Sanity checks.
check_explained_variance(table, poly, 2, 1)
check_explained_variance(table, poly, 3, 1)
check_explained_variance(table, poly, 4, 1)
check_explained_variance(table, poly, 5, 1)
poly
residual <- residual_kernel(rep(3, 5), "o-u", 5)
data(pca)
confounder <- pca[, 1] %*% rbind(seq(200, 600, 100)) + pca[, 2] %*% rbind(seq(100, 700, 150))
confounder
pheno <- ULPS(table, poly, residual) # Without confounders.
confounded_pheno <- ULPS(table, poly, residual, confounder) # Stratification by population structure.
pheno
dim(pheno)
dim(confounded_pheno)
data(table)
K <- table %*% t(table)
dim(K)
diag(K)
table[,1]
dim(table)
mean(table[,1])
var(table[,1])
t(table[, 1]) %*% table[, 1]
t(table[, 2]) %*% table[, 2]
diag(K)
NCOL(table)
K <- K/NCOL(table)
diag(K)
result <- mixed.solve(pheno, K = K)
library(rrBLUP)
result <- mixed.solve(pheno, K = K)
pheno[, 1]
dim(pheno[, 1])
length(pheno[, 1])
NCOL(pheno[, 1])
NROW(pheno[, 1])
library(rrBLUP)
K <- (table %*% t(table))/NCOL(table)
result <- mixed.solve(pheno[, 1], K = K)
```{r document, eval=FALSE}
str(result)
3*0.73
var(Y[, 1])
var(pheno[, 1])
table %*% poly$beta -> u
dim(u)
var(u[, 1])
library(ULPS)
